{"id":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","dependencies":[{"name":"/home/mars/working_space/hackhaton/posenet/demos/package.json","includedInParent":true,"mtime":1547194479053},{"name":"/home/mars/working_space/hackhaton/posenet/demos/.babelrc","includedInParent":true,"mtime":1546931561245},{"name":"/home/mars/working_space/hackhaton/posenet/demos/node_modules/tableschema/node_modules/lodash/package.json","includedInParent":true,"mtime":1547194403716},{"name":"./_Symbol","loc":{"line":1,"column":21},"parent":"/home/mars/working_space/hackhaton/posenet/demos/node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","resolved":"/home/mars/working_space/hackhaton/posenet/demos/node_modules/tableschema/node_modules/lodash/_Symbol.js"}],"generated":{"js":"var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","map":{"mappings":[{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/tableschema/node_modules/lodash/_cloneSymbol.js":"var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n"},"lineCount":19}},"hash":"ea34481f5947ec1baf17901fe8410599","cacheData":{"env":{}}}